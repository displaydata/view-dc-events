version: "3.5"
services:
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    environment:
      node.name: elasticsearch
      discovery.type: single-node
      cluster.name: elastic-cluster
      bootstrap.memory_lock: 'true'
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
      xpack.monitoring.collection.enabled: "true"
    ulimits:
          memlock:
            soft: -1
            hard: -1
          nproc: 4096
    restart: always
    ports:
      - target: 9200
        published: 9200
    networks:
      - elastic-net
    volumes:
      # Mount point for elasticsearch persistemt data
      - type: volume
        source: elastic-data
        target: /usr/share/elasticsearch/data

  kibana:
    build:
      context: ./docker/kibana
      args:
        ELK_VERSION: ${ELK_VERSION}
        EDTPLUGIN_VERSION: ${EDTPLUGIN_VERSION}
    image: kibana:${ELK_VERSION}
    container_name: kibana
    environment:
      node.name: kibana
      SERVER_HOST: "0.0.0.0"
      SERVER_NAME: "kibana"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    restart: always
    ports:
      - target: 5601
        published: 5601
    networks:
      - elastic-net

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    container_name: logstash
    environment:
      node.name: logstash
    restart: always
    depends_on:
      - elastic
    ports:
      - target: 5044
        published: 5044
    networks:
      - elastic-net
    volumes:
      - type: bind
        source: ./dynamic/logstash/config/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml
      - type: bind
        source: ./dynamic/logstash/pipeline
        target: /usr/share/logstash/pipeline
      # Mount point for log files to ingest
      - type: bind
        source: "${DYNAMIC_BASEDIR}"
        target: /logs
      # Mount point for logstash persistent data
      - type: volume
        source: logstash-data
        target: /usr/share/logstash/data

  filebeat:
    user: "root:${GID:-1000}"
    image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
    container_name: filebeat
    command: "filebeat -e -strict.perms=false"
    environment:
      - node.name=filebeat
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-elasticsearch}
      - KIBANA_HOST=${KIBANA_HOST:-kibana}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-elastic}
    restart: always
    depends_on:
      - elastic
      - kibana
    networks:
      - elastic-net
    volumes:
      - ./dynamic/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      # This mount is needed so container can see docker host messages
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # This mount is needed to view other container's log info
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro

  powershell:
    image: mcr.microsoft.com/powershell
    container_name: powershell
    networks:
      - elastic-net
    volumes:
      - ./powershell:/home/powershell
      - ./dynamic/kibana:/home/kibana

networks:
  elastic-net:

volumes:
  elastic-data:
    driver: local
  logstash-data:
    driver: local
