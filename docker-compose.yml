version: "3.5"
services:
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    environment:
      node.name: elasticsearch
      discovery.type: single-node
      cluster.name: elastic-cluster
      bootstrap.memory_lock: 'true'
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
      xpack.monitoring.collection.enabled: "true"
    ulimits:
          memlock:
            soft: -1
            hard: -1
          nproc: 4096
    restart: always
    ports:
      - target: 9200
        published: 9200
    networks:
      - elastic-net
    volumes:
      - type: volume
        source: elastic-data
        target: /usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: kibana
    environment:
      node.name: kibana
      SERVER_HOST: "0.0.0.0"
      SERVER_NAME: "kibana"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    restart: always
    ports:
      - target: 5601
        published: 5601
    networks:
      - elastic-net

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    container_name: logstash
    environment:
      node.name: logstash
    restart: always
    depends_on:
      - elastic
    networks:
      - elastic-net
    volumes:
      - type: bind
        source: ./dynamic/logstash/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml
      - type: bind
        source: ./dynamic/logstash/dynamic-user.conf
        target: /usr/share/logstash/pipeline/dynamic-user.conf
      - type: bind
        source: "${DYNAMIC_BASEDIR}"
        target: /logs
      - type: volume
        source: logstash-data
        target: /usr/share/logstash/data

networks:
  elastic-net:

volumes:
  elastic-data:
    driver: local
  logstash-data:
    driver: local
