# Elastic Stack Test calls
# Set of API calls to retrieve saved objects using VSCode REST Client
#  https://marketplace.visualstudio.com/items?itemName=humao.rest-client

# Set the port to the port of the docker contianer youi want to export from
# @base_url = http://localhost:5601/api
@base_url = http://localhost:5601/s/dc-health/api
# @base_url = http://192.168.200.153:5601/api
# @base_url = http://192.168.200.153:5601/s/dc-health/api
@user = elastic
@password = elastic

# ------------------ Dashboards -------------------
# Click on the GET below to fill out the @dash variable
###
# Return a list of features
# GET {{base_url}}/features
GET {{base_url}}/features/v1
Authorization: Basic {{user}} {{password}}

###
# Return a list of dashboards
# @name dashboards
GET {{base_url}}/saved_objects/_find?type=dashboard&search_fields=description&search=*
Authorization: Basic {{user}} {{password}}

# Get the first dashboard in the list

@dash = {{dashboards.response.body.$.saved_objects[3].id}}
###
# Retrieve the dashboard
GET {{base_url}}/kibana/dashboards/export?dashboard={{dash}}
content-type: application/json
Authorization: Basic {{user}} {{password}}

# Now you need to use the "Save Response Body" icon at the top of the
# pane to your right and save the response as a JSON file in the
# dcomm/import directory with a user friendly name
#
# You should remove the "index-pattern" object from the file if you are not
# using the load-saved-objects.sh script

# --------------- Visualisations --------------
# Click on the GET below to fill out the @visualizations variable
###
# Return a list of visualizations
# @name visualizations
GET {{base_url}}/saved_objects/_find?type=visualization&fields=id
Authorization: Basic {{user}} {{password}}


# Retrieve the visualizations
# NOTE: You will need to iterate through all the visualizations you need
#Â       by changing the index the request body below
###
POST {{base_url}}/saved_objects/_bulk_get
content-type: application/json
kbn-xsrf: true
Authorization: Basic {{user}} {{password}}

[
  {
    "type": "{{visualizations.response.body.$.saved_objects[3].type}}",
    "id": "{{visualizations.response.body.$.saved_objects[3].id}}"
  }
]

# Now you need to use the "Save Response Body" icon at the top of the
# pane to your right and save the response as a JSON file in the
# dcomm/visualizations directory with a user friendly name
#
# Then edit the file and make the "attributes" object the main object
# deleting all the "saved_objects" elements




# ------------------
# Below are just other examples of using the REST Client

@dashboard = ab6cf870-1452-11e9-8344-613cb17005b0

###
GET {{base_url}}/kibana/dashboards/export?dashboard={{dashboard}}
content-type: application/json
Authorization: Basic {{user}} {{password}}


###
POST {{base_url}}/kibana/dashboards/import?exclude=index-pattern&force=true
content-type: application/json
kbn-xsrf: true
Authorization: Basic {{user}} {{password}}

< /Users/ddix/Source/docker-compose-elk/setup/dcomm/kibana/import/[DCOMM]_Battery_Information.json


###
POST {{base_url}}/kibana/dashboards/import?exclude=index-pattern&force=true
content-type: application/json
kbn-xsrf: true
Authorization: Basic {{user}} {{password}}

< /Users/ddix/Source/docker-compose-elk/setup/dcomm/kibana/import/[DCOMMM]_Display_Voltage_Graph.json


###
POST {{base_url}}/saved_objects/_bulk_get
content-type: application/json
kbn-xsrf: true
Authorization: Basic {{user}} {{password}}

[
  {
    "type": "index-pattern",
    "id": "*"
  },
  {
    "type": "dashboard",
    "id": "*"
  }
]

###
GET {{base_url}}/saved_objects/index-pattern/dynamic-user-*
content-type: application/json
kbn-xsrf: true
Authorization: Basic {{user}} {{password}}


###
PUT {{base_url}}/saved_objects/index-pattern/dynamic-user-*
content-type: application/json
kbn-xsrf: true
Authorization: Basic {{user}} {{password}}

{
  "attributes": {
    "fieldFormatMap": "{\"RequestReference\":{\"id\":\"url\",\"params\":{\"urlTemplate\":\"http://192.168.200.153:5601/app/kibana#/dashboard/7d442ef0-e45e-11e9-b666-23c0bc229fd2?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now%2Fd,to:now%2Fd))&_a=(description:'Filter+by+LocationName+and+RequestReference+to+see+how+many+Display+Updates+succeeded+or+failed',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),panels:!((embeddableConfig:(),gridData:(h:7,i:'1',w:9,x:39,y:0),id:b8080300-d63e-11e9-8524-a53adb816424,panelIndex:'1',type:visualization,version:'7.3.2'),(embeddableConfig:(),gridData:(h:7,i:'2',w:9,x:39,y:7),id:'4c91fb70-d63f-11e9-8524-a53adb816424',panelIndex:'2',type:visualization,version:'7.3.2'),(embeddableConfig:(),gridData:(h:14,i:'3',w:30,x:9,y:0),id:'0adf3190-e047-11e9-b666-23c0bc229fd2',panelIndex:'3',type:visualization,version:'7.3.2'),(embeddableConfig:(),gridData:(h:14,i:'5',w:9,x:0,y:0),id:'64540df0-e52d-11e9-b666-23c0bc229fd2',panelIndex:'5',type:visualization,version:'7.3.2')),query:(language:kuery,query:'RequestReference+:+%22{{value}}%22+'),timeRestore:!f,title:'Request+Reference+Tracker',viewMode:view)\",\"labelTemplate\":\"{{value}}\"}},\"@version\":{\"id\":\"url\",\"params\":{\"urlTemplate\":\"http://www.displaydata.com\"}}}"
  }
}
